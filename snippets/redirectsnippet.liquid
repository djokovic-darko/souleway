<script>
              let store = "soule-way.myshopify.com"
          let traffic = {"Current Website":100};
        let allTests = {"Current Website":{"Current Website":"theCurrentLink"}};
        let tests = {"Current Website":{"Current Website":"theCurrentLink"}};
          
        let startSession = () => {
          sessionStorage.setItem("ABTCS", true);
      var http = new XMLHttpRequest();
    var url = 'https://www.souleway.com/apps/elevateab/addmaintraffic';
      var params = `shopID=${store}`;
    http.open('POST', url, true);
    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
      http.send(params);
      };

      let testItem = localStorage.getItem("ABTID");
      let currTestVar = localStorage.getItem("ABTV");
          let addPageView = (chosenItem, randomIndex) => {
            sessionStorage.setItem("ABAV", true);
            let getUnique = localStorage.getItem("ABTU");
            let uniqueValue = true;
   
            if(getUnique === "true"){
              uniqueValue = true;
              localStorage.setItem("ABTU", false);
            } else if(getUnique === "false"){
              uniqueValue = false;
            } else if(getUnique === null){
              uniqueValue = true;
              localStorage.setItem("ABTU", false);
            }
            let testID = testItem;
            let currentVar = currTestVar;
            if(testID == null || testID === "Current Website"){
              testID = chosenItem;
            }
            if(currTestVar == null || currTestVar === "Current Website"){
              currentVar = randomIndex;
            }
          var http = new XMLHttpRequest();
          var url = 'https://www.souleway.com/apps/elevateab/addview';
          var params = `testID=${testID}&Variation=${currentVar}&unique=${uniqueValue}&referrer=${document.referrer}&store=${store}`;
          http.open('POST', url, true);
          http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
            http.send(params);
        }
          
      let testDecide = async () => {            
        let chosenItem = null;
        let randNumber = Math.floor(Math.random() * 101);
        if(randNumber === 0){
          randNumber+=1
        };
        for(let item in traffic){
        if(randNumber <= traffic[item]){
        chosenItem = item;
        break
        }
        }
        const keys = Object.keys(tests[chosenItem]);

        if(keys.length > 1 && keys.indexOf("0") != -1){
          let indexOfControl = keys.indexOf("0")
          keys.splice(indexOfControl, 1)
        }

const randomIndex = keys[Math.floor(Math.random() * keys.length)];
        
          localStorage.setItem("ABTID", chosenItem);
          localStorage.setItem("ABTV", randomIndex);
          localStorage.setItem("ABTU", true);

          if(chosenItem != "Current Website" && randomIndex != "0"){
            if(allTests[chosenItem]["0"].includes("https")){
              if(window.location.href === allTests[chosenItem]["0"]){
                window.location.href = window.location.href + "?view=" + allTests[chosenItem][randomIndex];
                  addPageView(chosenItem, randomIndex);
                } 
            } else {
              let url = window.location.href;
              url = url.split("?");
              url = url[0];
              url = url.split("/");
              page = url[url.length-1];
        if(page === allTests[chosenItem]["0"]){
        window.location.href = allTests[chosenItem][randomIndex];
        addPageView(chosenItem, randomIndex);
        } 
      }
      } else if(randomIndex === "0" && allTests[chosenItem]["0"].includes("https") && window.location.href === allTests[chosenItem]["0"]){
      addPageView(chosenItem, randomIndex);
      } else if(randomIndex === "0" && allTests[chosenItem]["0"].includes("https") === false){
                        let url = window.location.href;
              url = url.split("?");
              url = url[0];
              url = url.split("/");
              page = url[url.length-1];
        if(page === allTests[chosenItem]["0"]){
        addPageView(chosenItem, randomIndex);
        } 
      } else if(chosenItem === "Current Website"){
    for(let item in tests){
      let url = window.location.href;
      url = url.split("?");
      url = url[0];
      url = url.split("/");
      let page = url[url.length-1];
      if(tests[item]["0"] == window.location.href || page === tests[item]["0"]){
        localStorage.setItem("ABTID", item);
        localStorage.setItem("ABTV", "0");
        addPageView(item, "0");
      }
    }
  }
          startSession();
        };
          

          let addAttributes = () => {
        var http = new XMLHttpRequest();
        var url = '/cart/update.js';
  var params = `attributes[abtestID]=${testItem},${currTestVar}`;
        http.open('POST', url, true);
        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
          http.send(params);
          };
          addAttributes();


          let addClickthrough = async () => {
            var http = new XMLHttpRequest();
            var url = 'https://www.souleway.com/apps/elevateab/addclickthrough';
              var params = `testID=${testItem}&Variation=${currTestVar}`;
            http.open('POST', url, true);
            http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
              http.send(params);
          };
          
        window.onload=function(){
          sessionStorage.setItem("Starttime", Date.now());
          sessionStorage.removeItem("Idle");
          if(testItem === "Current Website"){
            for(let item in tests){
              let url = window.location.href;
              url = url.split("?");
              url = url[0];
              url = url.split("/");
              let page = url[url.length-1];
              if(tests[item]["0"] == window.location.href || page === tests[item]["0"]){
                localStorage.setItem("ABTID", item);
                localStorage.setItem("ABTV", "0");
                addPageView(item, "0");
              }
            }
          }
        };

        var timeout;
        document.onmousemove = function(){
      clearTimeout(timeout);
         let idle = sessionStorage.getItem("Idle");
          if(idle === null || idle === undefined){
      timeout = setTimeout(function(){
              let timeSite= Date.now() - sessionStorage.getItem("Starttime") - 600000;
        sessionStorage.setItem("Idle", timeSite);
      }, 600000);
          }
    }

        let timeSpent = () => {
          let idle = sessionStorage.getItem("Idle");
          let timeSite= Date.now()- sessionStorage.getItem("Starttime");
          if(sessionStorage.getItem("Starttime") === null){
          timeSite = 0
          }
          if(idle != null && idle != undefined){
            timeSite = idle
            }
        ;
        let bounce = "none";
        let bounceRes = false
        if(allTests[testItem]["0"].includes("https") && currTestVar != "0" && window.location.href === (allTests[testItem]["0"] + "?view=" + allTests[testItem][currTestVar]) ){
          if(timeSite < 5000 && sessionStorage.getItem("Bounce") === null){
            bounceRes = true
          }
        } else if(allTests[testItem]["0"].includes("https") && currTestVar === "0" && window.location.href === allTests[testItem]["0"]){
          if(timeSite < 5000 && sessionStorage.getItem("Bounce") === null){
            bounceRes = true
          } 
        } else if(currTestVar != "0" && allTests[testItem]["0"].includes("https") === false && window.location.href === allTests[testItem][currTestVar] ){
          if(timeSite < 5000 && sessionStorage.getItem("Bounce") === null){
            bounceRes = true
          } 
        } else if(currTestVar === "0" && allTests[testItem]["0"].includes("https") === false ){
          let url = window.location.href;
          url = url.split("?");
          url = url[0];
          url = url.split("/");
          page = url[url.length-1];
          if(page === allTests[testItem]["0"]){
            if(timeSite < 5000 && sessionStorage.getItem("Bounce") === null){
              bounceRes = true
            } 
          }
        }
          if(timeSite != 0){
            if(bounceRes === true){
              sessionStorage.setItem("Bounce", "true");
              bounce = "Add";
            }
        else if(sessionStorage.getItem("Bounce") === "true"){
        bounce = "Sub";
           sessionStorage.setItem("Bounce", "false");
        } else if(sessionStorage.getItem("Bounce") === "false"){
        bounce = "none";
          sessionStorage.setItem("Bounce", "false");
        } else if(sessionStorage.getItem("Bounce") === null){
          bounce = "none";
        }
          }
        var http = new XMLHttpRequest();
        var url = 'https://www.souleway.com/apps/elevateab/addtime';
          var params = `testID=${testItem}&Variation=${currTestVar}&sessionTime=${timeSite}&bounce=${bounce}&store=${store}`;
        http.open('POST', url, true);
        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
          http.send(params);
        };
        
        window.onbeforeunload = function async (){
          timeSpent();
        };  
          
        let handleStart = () => {
          let addedView = sessionStorage.getItem("ABAV")
          if (testItem === null || traffic[testItem] === undefined || currTestVar === null || allTests[testItem][currTestVar] === undefined) {
          testDecide();
          } else {
                    if(sessionStorage.getItem("ABTCS") === null){
                startSession();
                  };
                  if(testItem != "Current Website" && currTestVar != "0"){
                    if(allTests[testItem]["0"].includes("https")){
                      if(window.location.href === allTests[testItem]["0"]){
                        window.location.href = window.location.href + "?view=" + allTests[testItem][currTestVar];
                        if(addedView === null || addedView === undefined) {
                          addPageView()
                           }
                        } else{
                          if(allTests[testItem]["Clickthrough"] != undefined){
                            if(window.location.href === allTests[testItem]["Clickthrough"] && document.referrer === allTests[testItem]["0"] + "?view=" + allTests[testItem][currTestVar]){
                              addClickthrough();
                            }
                          }
                        }
                    } else {
                      let url = window.location.href;
                      url = url.split("?");
                      url = url[0];
                      url = url.split("/");
                      page = url[url.length-1];
                if(page === allTests[testItem]["0"]){
                  if(addedView === null || addedView === undefined) {
                    addPageView()
                     }
                window.location.href = allTests[testItem][currTestVar];
                } else if(window.location.href === allTests[testItem][currTestVar]){
                  if(addedView === null || addedView === undefined) {
                    addPageView()
                     }                }
              }
              } else if(currTestVar === "0" && allTests[testItem]["0"].includes("https") && window.location.href === allTests[testItem]["Clickthrough"] && document.referrer === allTests[testItem]["0"]){
                addClickthrough()
              } else if(currTestVar === "0" && allTests[testItem]["0"].includes("https") && window.location.href === allTests[testItem]["0"]){
                if(addedView === null || addedView === undefined) {
                  addPageView()
                   }
                } else if(currTestVar === "0" && allTests[testItem]["0"].includes("https") === false){
                let url = window.location.href;
                url = url.split("?");
                url = url[0];
                url = url.split("/");
                page = url[url.length-1];
                if(page === allTests[testItem]["0"]){
                  if(addedView === null || addedView === undefined) {
                    addPageView()
                     }
                  }
              }
          }
        }
        handleStart();
                </script>